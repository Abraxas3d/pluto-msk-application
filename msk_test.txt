* Acquiring IIO context
* Acquiring AD9361 streaming devices
* Configuring AD9361 for streaming
* Acquiring AD9361 phy channel 0
* Acquiring AD9361 RX lo channel
* Acquiring AD9361 phy channel 0
* Acquiring AD9361 TX lo channel
* Initializing AD9361 IIO streaming channels
* Enabling IIO streaming channels
* set_kernel_buffers returned 0, which is a success.
* Creating non-cyclic IIO buffers with 1 MiS
Hello World! Running TX-DMA access tests.
Opening a character device file in DDR memory.
Memory map the address of the TX-DMAC via its AXI lite control interface register block.
Memory map the address of the MSK block via its AXI lite control interface.
Create a buffer for some transmitted data.
TX DMAC Interface Description (0x00070313@0x0010):
Writing to scratch register in TX-DMAC.
Reading from scratch register in TX-DMAC. We see: (0x5555aaaa@0008)
Reading the TX-DMAC peripheral ID: (0x00000000@0004)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Configure MSK for minimum viable product test.
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Reading from MSK block HASH ID LOW: (0xaaaa5555@0000)
Reading from MSK block HASH ID HIGH: (0x5555aaaa@0004)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Initialize MSK block.
Read MSK_INIT: (0x00000000@0008)
bit 0: 0 is normal operation and 1 is initialize modem (reset condition).
Assert INIT: Write 1 to MSK_INIT
Reading MSK_INIT. We see: (0x00000001@0008)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Writing MSK_CONTROL register.
Writing PTT and loopback enable, bits 0 and 1 set.
Reading back MSK_CONTROL status register. We see: (0x00000003@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Reading the MSK_STATUS register, we see: (0x00000006@0010)
Bit 0 is demod_sync(not implemented), bit 1 is tx_enable, bit 2 is rx_enable
tx_enable is data to DAC enabled. rx_enable is data from ADC enable.
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
TX_BIT_COUNT register is read, we see: (0x00000000@0014)
This register reads out the count of data requests made by the modem.
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
TX_ENABLE_COUNT register is read and write. It holds the number of clocks on which Tx Enable is active.
First we read it, we see: (0xbddc4577@0018)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Writing fb, f1, f2 (values enumerated in github register map for MSK TX).
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Writing f1, f2 (values enumerated in github register map for MSK RX).
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Reading the LPF_CONFIG_0 register.
First we read it, we see: (0x00020000@0030)
bit 0 is whether or not we freeze the accumulator's current value.
bit 1 holds the PI accumulator at zero.
bits 31:16 are the LPF IIR alpha value.
Reading the LPF_CONFIG_1 register.
First we read it, we see: (0x00640028@0034)
bit 15:0 sets the integral gain of the PI controller integrator.
bit 31:16 sets the proportional gain of the PI controller integrator.
Writing 0x00020000 as filter roll off.
Writing 0x0064 as proportional gain and 0x00000028 as integral gain.
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read TX_DATA_WIDTH, which is the modem transmit input/output data width.
We see: (0x00000008@0038)
Read RX_DATA_WIDTH, which is the modem receive input/output data width.
We see: (0x00000008@003c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Pseudo Random Binary Sequence control registers are read.
We read PRBS_CONTROL: (0x00000000@0040)
bit 0 is PRBS data select. 0 is normal data transmit and 1 is PRBS transmit.
bit 1 is PRBS error insert. 0 is no error insertion and 1 inserts a bit error in transmit.
NOTE: error is inserted in both normal and PRBS data selection modes.
bit 2 is PRBS clear. This is reserved.
bit 3 is PRBS sync. 0 is normal operations. 1 synchronizes PRBS monitor.
We read PRBS_INITIAL_STATE: (0xffffffff@0044)
This is the PRBS seed value. It sets the starting value of the PRBS generator.
We read PRBS_POLYNOMIAL: (0x48000000@0048)
Bit positions set to 1 indicate polynomial feedback positions.
We read PRBS_ERROR_MASK: (0x00000001@004c)
Bit positions set to 1 indicate bits that are inverted when a bit error is inserted.
We read PRBS_BIT_COUNT: (0x00000000@0050)
Number of bits received by the PRBS monitor since last BER
can be calculated as the ratio of received bits to errored-bits.
We read PRBS_ERROR_COUNT: (0x00000000@0054)
Number of errored-bits received by the PRBS monitor since last BER
can be calculated as the ratio of received bits to errored-bits.
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
We read LPF_ACCUM_F1: (0x00000000@0058)
PI conotroller accumulator value.
We read LPF_ACCUM_F2: (0x00000000@005c)
PI conotroller accumulator value.
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Attempt to set up PRBS. Loopback was enabled above in MSK_CONTROL.
Write 0x00000001 to PRBS_CONTROL. PRBS active (bit 0), no errors inserted (bit 1).
We read PRBS_CONTROL: (0x00000001@0040)
Write a value to PRBS_INITIAL_STATE, as the seed.
We read PRBS_INITIAL_STATE: (0xffffffff@0044)
Write 0x48000000 to PRBS_POLYNOMIAL (31,28), a max length Fibonacci sequence generators.
We read PRBS_POLYNOMIAL: (0x48000000@0048)
Write 0x00000001 to PRBS_ERROR_MASK.
We read PRBS_ERROR_MASK: (0x00000001@004c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Deassert INIT: Write 0 to MSK_INIT
Read MSK_INIT: (0x00000000@0008)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000004@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000000b5@0050)
PRBS_ERROR_COUNT: (0x00000056@0054)
PRBS_BIT_COUNT:   (0x00000166@0050)
PRBS_ERROR_COUNT: (0x0000009c@0054)
PRBS_BIT_COUNT:   (0x00000219@0050)
PRBS_ERROR_COUNT: (0x00000101@0054)
PRBS_BIT_COUNT:   (0x000002c9@0050)
PRBS_ERROR_COUNT: (0x00000152@0054)
PRBS_BIT_COUNT:   (0x00000378@0050)
PRBS_ERROR_COUNT: (0x000001ae@0054)
PRBS_BIT_COUNT:   (0x00000428@0050)
PRBS_ERROR_COUNT: (0x0000020c@0054)
PRBS_BIT_COUNT:   (0x000004d7@0050)
PRBS_ERROR_COUNT: (0x0000025e@0054)
PRBS_BIT_COUNT:   (0x00000586@0050)
PRBS_ERROR_COUNT: (0x000002b6@0054)
PRBS_BIT_COUNT:   (0x0000063a@0050)
PRBS_ERROR_COUNT: (0x00000319@0054)
PRBS_BIT_COUNT:   (0x000006eb@0050)
PRBS_ERROR_COUNT: (0x0000036c@0054)
PRBS_BIT_COUNT:   (0x0000079e@0050)
PRBS_ERROR_COUNT: (0x000003d1@0054)
PRBS_BIT_COUNT:   (0x0000084e@0050)
PRBS_ERROR_COUNT: (0x0000041f@0054)
PRBS_BIT_COUNT:   (0x00000900@0050)
PRBS_ERROR_COUNT: (0x00000450@0054)
PRBS_BIT_COUNT:   (0x000009b1@0050)
PRBS_ERROR_COUNT: (0x000004a1@0054)
PRBS_BIT_COUNT:   (0x00000a63@0050)
PRBS_ERROR_COUNT: (0x000004ee@0054)
PRBS_BIT_COUNT:   (0x00000b14@0050)
PRBS_ERROR_COUNT: (0x0000054b@0054)
PRBS_BIT_COUNT:   (0x00000bc6@0050)
PRBS_ERROR_COUNT: (0x000005ab@0054)
PRBS_BIT_COUNT:   (0x00000c78@0050)
PRBS_ERROR_COUNT: (0x000005e7@0054)
PRBS_BIT_COUNT:   (0x00000d29@0050)
PRBS_ERROR_COUNT: (0x0000063d@0054)
PRBS_BIT_COUNT:   (0x00000ddb@0050)
PRBS_ERROR_COUNT: (0x0000069a@0054)
PRBS_BIT_COUNT:   (0x00000e8c@0050)
PRBS_ERROR_COUNT: (0x000006f6@0054)
PRBS_BIT_COUNT:   (0x00000f3e@0050)
PRBS_ERROR_COUNT: (0x0000074c@0054)
PRBS_BIT_COUNT:   (0x00000ff0@0050)
PRBS_ERROR_COUNT: (0x0000079f@0054)
PRBS_BIT_COUNT:   (0x000010a1@0050)
PRBS_ERROR_COUNT: (0x000007eb@0054)
PRBS_BIT_COUNT:   (0x00001153@0050)
PRBS_ERROR_COUNT: (0x0000083b@0054)
PRBS_BIT_COUNT:   (0x00001205@0050)
PRBS_ERROR_COUNT: (0x00000894@0054)
PRBS_BIT_COUNT:   (0x000012b7@0050)
PRBS_ERROR_COUNT: (0x000008f8@0054)
PRBS_BIT_COUNT:   (0x00001376@0050)
PRBS_ERROR_COUNT: (0x00000957@0054)
PRBS_BIT_COUNT:   (0x00001434@0050)
PRBS_ERROR_COUNT: (0x000009ba@0054)
PRBS_BIT_COUNT:   (0x000014f3@0050)
PRBS_ERROR_COUNT: (0x00000a14@0054)
PRBS_BIT_COUNT:   (0x000015b3@0050)
PRBS_ERROR_COUNT: (0x00000a57@0054)
PRBS_BIT_COUNT:   (0x00001665@0050)
PRBS_ERROR_COUNT: (0x00000aa9@0054)
PRBS_BIT_COUNT:   (0x00001717@0050)
PRBS_ERROR_COUNT: (0x00000b06@0054)
PRBS_BIT_COUNT:   (0x000017ca@0050)
PRBS_ERROR_COUNT: (0x00000b6b@0054)
PRBS_BIT_COUNT:   (0x0000187c@0050)
PRBS_ERROR_COUNT: (0x00000bb8@0054)
PRBS_BIT_COUNT:   (0x0000192e@0050)
PRBS_ERROR_COUNT: (0x00000c00@0054)
PRBS_BIT_COUNT:   (0x000019e0@0050)
PRBS_ERROR_COUNT: (0x00000c57@0054)
PRBS_BIT_COUNT:   (0x00001a93@0050)
PRBS_ERROR_COUNT: (0x00000cb9@0054)
PRBS_BIT_COUNT:   (0x00001b45@0050)
PRBS_ERROR_COUNT: (0x00000d0e@0054)
PRBS_BIT_COUNT:   (0x00001bf7@0050)
PRBS_ERROR_COUNT: (0x00000d71@0054)
PRBS_BIT_COUNT:   (0x00001ca9@0050)
PRBS_ERROR_COUNT: (0x00000dcd@0054)
PRBS_BIT_COUNT:   (0x00001d5c@0050)
PRBS_ERROR_COUNT: (0x00000e27@0054)
PRBS_BIT_COUNT:   (0x00001e0e@0050)
PRBS_ERROR_COUNT: (0x00000e7e@0054)
PRBS_BIT_COUNT:   (0x00001ec0@0050)
PRBS_ERROR_COUNT: (0x00000eda@0054)
PRBS_BIT_COUNT:   (0x00001f72@0050)
PRBS_ERROR_COUNT: (0x00000f32@0054)
PRBS_BIT_COUNT:   (0x00002025@0050)
PRBS_ERROR_COUNT: (0x00000f83@0054)
PRBS_BIT_COUNT:   (0x000020d7@0050)
PRBS_ERROR_COUNT: (0x00000fe3@0054)
PRBS_BIT_COUNT:   (0x0000218a@0050)
PRBS_ERROR_COUNT: (0x00001043@0054)
PRBS_BIT_COUNT:   (0x0000223c@0050)
PRBS_ERROR_COUNT: (0x00001098@0054)
PRBS_BIT_COUNT:   (0x000022ee@0050)
PRBS_ERROR_COUNT: (0x000010e4@0054)
PRBS_BIT_COUNT:   (0x000023a0@0050)
PRBS_ERROR_COUNT: (0x0000113f@0054)
PRBS_BIT_COUNT:   (0x00002452@0050)
PRBS_ERROR_COUNT: (0x000011a1@0054)
PRBS_BIT_COUNT:   (0x00002504@0050)
PRBS_ERROR_COUNT: (0x000011fd@0054)
PRBS_BIT_COUNT:   (0x000025b6@0050)
PRBS_ERROR_COUNT: (0x00001259@0054)
PRBS_BIT_COUNT:   (0x00002667@0050)
PRBS_ERROR_COUNT: (0x000012ae@0054)
PRBS_BIT_COUNT:   (0x00002719@0050)
PRBS_ERROR_COUNT: (0x0000130b@0054)
PRBS_BIT_COUNT:   (0x000027cb@0050)
PRBS_ERROR_COUNT: (0x0000135e@0054)
PRBS_BIT_COUNT:   (0x0000287c@0050)
PRBS_ERROR_COUNT: (0x000013a7@0054)
PRBS_BIT_COUNT:   (0x0000292e@0050)
PRBS_ERROR_COUNT: (0x00001401@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
resync PRBS by setting and then clearing bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x00000009 to PRBS_CONTROL. PRBS active, no errors inserted, PRBS sync.
We read PRBS_CONTROL: (0x00000009@0040)
We read PRBS_CONTROL: (0x00000001@0040)
We read MSK_CONTROL: (0x00000003@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000093@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000144@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000001f6@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000002a7@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000359@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x0000040b@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000004bc@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x0000056e@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x0000061f@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000006d1@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
resync PRBS (2nd time) by setting and then clearing bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x00000009 to PRBS_CONTROL. PRBS active, no errors inserted, PRBS sync.
We read PRBS_CONTROL: (0x00000009@0040)
We read PRBS_CONTROL: (0x00000001@0040)
We read MSK_CONTROL: (0x00000003@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000093@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000144@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000001f6@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000002a8@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000359@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x0000040b@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000004bd@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x0000056e@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000620@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000006d2@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Do not resync at this time, which is bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x00000003 to PRBS_CONTROL. PRBS active, errors inserted.
We read PRBS_CONTROL: (0x00000003@0040)
We read MSK_CONTROL: (0x00000003@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000839@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000008eb@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x0000099d@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000a4f@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000b01@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000bb3@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000c65@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000d17@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000dc9@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000e7b@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Do not resync at this time, which is bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x00000001 to PRBS_CONTROL. PRBS active, errors not inserted.
We read PRBS_CONTROL: (0x00000001@0040)
We read MSK_CONTROL: (0x00000003@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000fe0@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x00001091@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x00001143@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x000011f4@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x000012a6@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x00001358@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x0000140a@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x000014bd@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x0000156f@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x00001622@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Enable PTT, loopback, and assert RX invert. Write 0x00000007 to MSK_CONTROL.
We read MSK_CONTROL: (0x00000007@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x000016d6@0050)
PRBS_ERROR_COUNT: (0x00000002@0054)
PRBS_BIT_COUNT:   (0x00001787@0050)
PRBS_ERROR_COUNT: (0x000000b4@0054)
PRBS_BIT_COUNT:   (0x00001839@0050)
PRBS_ERROR_COUNT: (0x00000166@0054)
PRBS_BIT_COUNT:   (0x000018ec@0050)
PRBS_ERROR_COUNT: (0x00000218@0054)
PRBS_BIT_COUNT:   (0x0000199e@0050)
PRBS_ERROR_COUNT: (0x000002ca@0054)
PRBS_BIT_COUNT:   (0x00001a50@0050)
PRBS_ERROR_COUNT: (0x0000037d@0054)
PRBS_BIT_COUNT:   (0x00001b04@0050)
PRBS_ERROR_COUNT: (0x00000430@0054)
PRBS_BIT_COUNT:   (0x00001bb7@0050)
PRBS_ERROR_COUNT: (0x000004e4@0054)
PRBS_BIT_COUNT:   (0x00001c6a@0050)
PRBS_ERROR_COUNT: (0x00000596@0054)
PRBS_BIT_COUNT:   (0x00001d1c@0050)
PRBS_ERROR_COUNT: (0x00000649@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
resync PRBS by setting and then clearing bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x00000009 to PRBS_CONTROL. PRBS active, no errors inserted, PRBS sync.
We read PRBS_CONTROL: (0x00000009@0040)
We read PRBS_CONTROL: (0x00000001@0040)
We read MSK_CONTROL: (0x00000007@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000093@0050)
PRBS_ERROR_COUNT: (0x00000075@0054)
PRBS_BIT_COUNT:   (0x00000145@0050)
PRBS_ERROR_COUNT: (0x000000e1@0054)
PRBS_BIT_COUNT:   (0x000001f7@0050)
PRBS_ERROR_COUNT: (0x00000134@0054)
PRBS_BIT_COUNT:   (0x000002aa@0050)
PRBS_ERROR_COUNT: (0x00000193@0054)
PRBS_BIT_COUNT:   (0x0000035c@0050)
PRBS_ERROR_COUNT: (0x000001e3@0054)
PRBS_BIT_COUNT:   (0x0000040e@0050)
PRBS_ERROR_COUNT: (0x0000023b@0054)
PRBS_BIT_COUNT:   (0x000004c1@0050)
PRBS_ERROR_COUNT: (0x0000029f@0054)
PRBS_BIT_COUNT:   (0x00000573@0050)
PRBS_ERROR_COUNT: (0x000002ec@0054)
PRBS_BIT_COUNT:   (0x00000625@0050)
PRBS_ERROR_COUNT: (0x0000034d@0054)
PRBS_BIT_COUNT:   (0x000006d7@0050)
PRBS_ERROR_COUNT: (0x000003a9@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
resync PRBS by setting and then clearing bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x0000000b to PRBS_CONTROL. PRBS active, errors inserted, PRBS sync.
We read PRBS_CONTROL: (0x0000000b@0040)
We read PRBS_CONTROL: (0x00000003@0040)
We read MSK_CONTROL: (0x00000007@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000093@0050)
PRBS_ERROR_COUNT: (0x00000075@0054)
PRBS_BIT_COUNT:   (0x00000144@0050)
PRBS_ERROR_COUNT: (0x000000df@0054)
PRBS_BIT_COUNT:   (0x000001f6@0050)
PRBS_ERROR_COUNT: (0x00000132@0054)
PRBS_BIT_COUNT:   (0x000002a7@0050)
PRBS_ERROR_COUNT: (0x00000190@0054)
PRBS_BIT_COUNT:   (0x00000359@0050)
PRBS_ERROR_COUNT: (0x000001e2@0054)
PRBS_BIT_COUNT:   (0x0000040b@0050)
PRBS_ERROR_COUNT: (0x0000023a@0054)
PRBS_BIT_COUNT:   (0x000004bc@0050)
PRBS_ERROR_COUNT: (0x0000029c@0054)
PRBS_BIT_COUNT:   (0x0000056e@0050)
PRBS_ERROR_COUNT: (0x000002eb@0054)
PRBS_BIT_COUNT:   (0x0000061f@0050)
PRBS_ERROR_COUNT: (0x0000034d@0054)
PRBS_BIT_COUNT:   (0x000006d1@0050)
PRBS_ERROR_COUNT: (0x000003a6@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
resync PRBS by setting and then clearing bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x00000009 to PRBS_CONTROL. PRBS active, no errors inserted, PRBS sync.
We read PRBS_CONTROL: (0x00000009@0040)
We read PRBS_CONTROL: (0x00000001@0040)
We read MSK_CONTROL: (0x00000007@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000093@0050)
PRBS_ERROR_COUNT: (0x00000075@0054)
PRBS_BIT_COUNT:   (0x00000144@0050)
PRBS_ERROR_COUNT: (0x000000e0@0054)
PRBS_BIT_COUNT:   (0x000001f6@0050)
PRBS_ERROR_COUNT: (0x00000132@0054)
PRBS_BIT_COUNT:   (0x000002a8@0050)
PRBS_ERROR_COUNT: (0x00000191@0054)
PRBS_BIT_COUNT:   (0x00000359@0050)
PRBS_ERROR_COUNT: (0x000001e3@0054)
PRBS_BIT_COUNT:   (0x0000040b@0050)
PRBS_ERROR_COUNT: (0x0000023a@0054)
PRBS_BIT_COUNT:   (0x000004bd@0050)
PRBS_ERROR_COUNT: (0x0000029c@0054)
PRBS_BIT_COUNT:   (0x0000056e@0050)
PRBS_ERROR_COUNT: (0x000002eb@0054)
PRBS_BIT_COUNT:   (0x00000620@0050)
PRBS_ERROR_COUNT: (0x0000034d@0054)
PRBS_BIT_COUNT:   (0x000006d2@0050)
PRBS_ERROR_COUNT: (0x000003a7@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Enable PTT, loopback, and deassert RX invert. Write 0x00000003 to MSK_CONTROL.
We read MSK_CONTROL: (0x00000003@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000786@0050)
PRBS_ERROR_COUNT: (0x00000407@0054)
PRBS_BIT_COUNT:   (0x00000838@0050)
PRBS_ERROR_COUNT: (0x0000045e@0054)
PRBS_BIT_COUNT:   (0x000008ea@0050)
PRBS_ERROR_COUNT: (0x0000049e@0054)
PRBS_BIT_COUNT:   (0x0000099b@0050)
PRBS_ERROR_COUNT: (0x000004df@0054)
PRBS_BIT_COUNT:   (0x00000a4d@0050)
PRBS_ERROR_COUNT: (0x0000053c@0054)
PRBS_BIT_COUNT:   (0x00000aff@0050)
PRBS_ERROR_COUNT: (0x00000594@0054)
PRBS_BIT_COUNT:   (0x00000bb1@0050)
PRBS_ERROR_COUNT: (0x000005e3@0054)
PRBS_BIT_COUNT:   (0x00000c63@0050)
PRBS_ERROR_COUNT: (0x00000635@0054)
PRBS_BIT_COUNT:   (0x00000d15@0050)
PRBS_ERROR_COUNT: (0x00000691@0054)
PRBS_BIT_COUNT:   (0x00000dc7@0050)
PRBS_ERROR_COUNT: (0x000006ea@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
resync PRBS by setting and then clearing bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x00000009 to PRBS_CONTROL. PRBS active, errors not inserted, PRBS sync.
We read PRBS_CONTROL: (0x00000009@0040)
We read PRBS_CONTROL: (0x00000001@0040)
We read MSK_CONTROL: (0x00000003@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000093@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000145@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000001f7@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000002a9@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x0000035b@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x0000040d@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000004bf@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000571@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000623@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000006d5@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Write 0x00000000 to PRBS_CONTROL. Normal operations, errors not inserted, PRBS deactivated.
We read PRBS_CONTROL: (0x00000000@0040)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Writing MSK_CONTROL register.
Writing PTT, bits 0 set. Loopback bit 1 cleared.
We read MSK_CONTROL: (0x00000001@000c)
Normal operations, loopback is no longer enabled.
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
* Starting IO streaming (press CTRL+C to cancel)
Error refilling buf -110
* Destroying buffers
* Disabling streaming channels
* Destroying context
