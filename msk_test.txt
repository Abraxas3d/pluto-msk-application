* Acquiring IIO context
* Acquiring AD9361 streaming devices
* Configuring AD9361 for streaming
* Acquiring AD9361 phy channel 0
* Acquiring AD9361 RX lo channel
* Acquiring AD9361 phy channel 0
* Acquiring AD9361 TX lo channel
* Initializing AD9361 IIO streaming channels
* Enabling IIO streaming channels
* Creating non-cyclic IIO buffers with 1 MiS
Hello World! Running TX-DMA access tests.
Opening a character device file in DDR memory.
Memory map the address of the TX-DMAC via its AXI lite control interface register block.
Memory map the address of the MSK block via its AXI lite control interface.
Create a buffer for some transmitted data.
TX DMAC Interface Description (0x00070313@0x0010):
Writing to scratch register in TX-DMAC.
Reading from scratch register in TX-DMAC. We see: (0x5555aaaa@0008)
Reading the TX-DMAC peripheral ID: (0x00000000@0004)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Configure MSK for minimum viable product test.
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Reading from MSK block HASH ID LOW: (0xaaaa5555@0000)
Reading from MSK block HASH ID HIGH: (0x5555aaaa@0004)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Initialize MSK block.
Read MSK_INIT: (0x00000000@0008)
bit 0: 0 is normal operation and 1 is initialize modem (reset condition).
Assert INIT: Write 1 to MSK_INIT
Reading MSK_INIT. We see: (0x00000001@0008)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Writing MSK_CONTROL register.
Writing PTT and loopback enable, bits 0 and 1 set.
Reading back MSK_CONTROL status register. We see: (0x00000003@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Reading the MSK_STATUS register, we see: (0x00000006@0010)
Bit 0 is demod_sync(not implemented), bit 1 is tx_enable, bit 2 is rx_enable
tx_enable is data to DAC enabled. rx_enable is data from ADC enable.
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
TX_BIT_COUNT register is read, we see: (0x00000000@0014)
This register reads out the count of data requests made by the modem.
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
TX_ENABLE_COUNT register is read and write. It holds the number of clocks on which Tx Enable is active.
First we read it, we see: (0x20a1393a@0018)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Writing fb, f1, f2 (values enumerated in github register map for MSK TX).
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Writing f1, f2 (values enumerated in github register map for MSK RX).
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Reading the LPF_CONFIG_0 register.
First we read it, we see: (0x00020000@0030)
bit 0 is whether or not we freeze the accumulator's current value.
bit 1 holds the PI accumulator at zero.
bits 31:16 are the LPF IIR alpha value.
Reading the LPF_CONFIG_1 register.
First we read it, we see: (0x00640028@0034)
bit 15:0 sets the integral gain of the PI controller integrator.
bit 31:16 sets the proportional gain of the PI controller integrator.
Writing 0x00020000 as filter roll off.
Writing 0x0064 as proportional gain and 0x00000028 as integral gain.
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read TX_DATA_WIDTH, which is the modem transmit input/output data width.
We see: (0x00000008@0038)
Read RX_DATA_WIDTH, which is the modem receive input/output data width.
We see: (0x00000008@003c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Pseudo Random Binary Sequence control registers are read.
We read PRBS_CONTROL: (0x00000000@0040)
bit 0 is PRBS data select. 0 is normal data transmit and 1 is PRBS transmit.
bit 1 is PRBS error insert. 0 is no error insertion and 1 inserts a bit error in transmit.
NOTE: error is inserted in both normal and PRBS data selection modes.
bit 2 is PRBS clear. This is reserved.
bit 3 is PRBS sync. 0 is normal operations. 1 synchronizes PRBS monitor.
We read PRBS_INITIAL_STATE: (0xffffffff@0044)
This is the PRBS seed value. It sets the starting value of the PRBS generator.
We read PRBS_POLYNOMIAL: (0x48000000@0048)
Bit positions set to 1 indicate polynomial feedback positions.
We read PRBS_ERROR_MASK: (0x00000001@004c)
Bit positions set to 1 indicate bits that are inverted when a bit error is inserted.
We read PRBS_BIT_COUNT: (0x00000000@0050)
Number of bits received by the PRBS monitor since last BER
can be calculated as the ratio of received bits to errored-bits.
We read PRBS_ERROR_COUNT: (0x00000000@0054)
Number of errored-bits received by the PRBS monitor since last BER
can be calculated as the ratio of received bits to errored-bits.
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
We read LPF_ACCUM_F1: (0x00000000@0058)
PI conotroller accumulator value.
We read LPF_ACCUM_F2: (0x00000000@005c)
PI conotroller accumulator value.
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Attempt to set up PRBS. Loopback was enabled above in MSK_CONTROL.
Write 0x00000001 to PRBS_CONTROL. PRBS active (bit 0), no errors inserted (bit 1).
We read PRBS_CONTROL: (0x00000001@0040)
Write a value to PRBS_INITIAL_STATE, as the seed.
We read PRBS_INITIAL_STATE: (0xffffffff@0044)
Write 0x48000000 to PRBS_POLYNOMIAL (31,28), a max length Fibonacci sequence generators.
We read PRBS_POLYNOMIAL: (0x48000000@0048)
Write 0x00000001 to PRBS_ERROR_MASK.
We read PRBS_ERROR_MASK: (0x00000001@004c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Deassert INIT: Write 0 to MSK_INIT
Read MSK_INIT: (0x00000000@0008)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000006@0050)
PRBS_ERROR_COUNT: (0x00000003@0054)
PRBS_BIT_COUNT:   (0x000000bc@0050)
PRBS_ERROR_COUNT: (0x0000005a@0054)
PRBS_BIT_COUNT:   (0x00000171@0050)
PRBS_ERROR_COUNT: (0x000000a6@0054)
PRBS_BIT_COUNT:   (0x00000227@0050)
PRBS_ERROR_COUNT: (0x00000109@0054)
PRBS_BIT_COUNT:   (0x000002d8@0050)
PRBS_ERROR_COUNT: (0x0000015c@0054)
PRBS_BIT_COUNT:   (0x00000387@0050)
PRBS_ERROR_COUNT: (0x000001b4@0054)
PRBS_BIT_COUNT:   (0x00000437@0050)
PRBS_ERROR_COUNT: (0x00000210@0054)
PRBS_BIT_COUNT:   (0x000004e6@0050)
PRBS_ERROR_COUNT: (0x00000265@0054)
PRBS_BIT_COUNT:   (0x00000595@0050)
PRBS_ERROR_COUNT: (0x000002bd@0054)
PRBS_BIT_COUNT:   (0x00000649@0050)
PRBS_ERROR_COUNT: (0x00000322@0054)
PRBS_BIT_COUNT:   (0x000006fb@0050)
PRBS_ERROR_COUNT: (0x00000376@0054)
PRBS_BIT_COUNT:   (0x000007ad@0050)
PRBS_ERROR_COUNT: (0x000003d9@0054)
PRBS_BIT_COUNT:   (0x0000085e@0050)
PRBS_ERROR_COUNT: (0x00000422@0054)
PRBS_BIT_COUNT:   (0x0000090f@0050)
PRBS_ERROR_COUNT: (0x00000452@0054)
PRBS_BIT_COUNT:   (0x000009c1@0050)
PRBS_ERROR_COUNT: (0x000004a8@0054)
PRBS_BIT_COUNT:   (0x00000a72@0050)
PRBS_ERROR_COUNT: (0x000004f9@0054)
PRBS_BIT_COUNT:   (0x00000b24@0050)
PRBS_ERROR_COUNT: (0x00000551@0054)
PRBS_BIT_COUNT:   (0x00000bd6@0050)
PRBS_ERROR_COUNT: (0x000005af@0054)
PRBS_BIT_COUNT:   (0x00000c87@0050)
PRBS_ERROR_COUNT: (0x000005ed@0054)
PRBS_BIT_COUNT:   (0x00000d39@0050)
PRBS_ERROR_COUNT: (0x00000645@0054)
PRBS_BIT_COUNT:   (0x00000dea@0050)
PRBS_ERROR_COUNT: (0x000006a6@0054)
PRBS_BIT_COUNT:   (0x00000e9c@0050)
PRBS_ERROR_COUNT: (0x000006fc@0054)
PRBS_BIT_COUNT:   (0x00000f4e@0050)
PRBS_ERROR_COUNT: (0x00000756@0054)
PRBS_BIT_COUNT:   (0x00000fff@0050)
PRBS_ERROR_COUNT: (0x000007a6@0054)
PRBS_BIT_COUNT:   (0x000010b1@0050)
PRBS_ERROR_COUNT: (0x000007f8@0054)
PRBS_BIT_COUNT:   (0x00001162@0050)
PRBS_ERROR_COUNT: (0x00000844@0054)
PRBS_BIT_COUNT:   (0x00001214@0050)
PRBS_ERROR_COUNT: (0x00000898@0054)
PRBS_BIT_COUNT:   (0x000012c6@0050)
PRBS_ERROR_COUNT: (0x000008fc@0054)
PRBS_BIT_COUNT:   (0x00001377@0050)
PRBS_ERROR_COUNT: (0x00000954@0054)
PRBS_BIT_COUNT:   (0x00001429@0050)
PRBS_ERROR_COUNT: (0x000009ae@0054)
PRBS_BIT_COUNT:   (0x000014da@0050)
PRBS_ERROR_COUNT: (0x00000a02@0054)
PRBS_BIT_COUNT:   (0x0000158c@0050)
PRBS_ERROR_COUNT: (0x00000a4a@0054)
PRBS_BIT_COUNT:   (0x0000163e@0050)
PRBS_ERROR_COUNT: (0x00000a94@0054)
PRBS_BIT_COUNT:   (0x000016ef@0050)
PRBS_ERROR_COUNT: (0x00000aef@0054)
PRBS_BIT_COUNT:   (0x000017a1@0050)
PRBS_ERROR_COUNT: (0x00000b50@0054)
PRBS_BIT_COUNT:   (0x00001853@0050)
PRBS_ERROR_COUNT: (0x00000b9e@0054)
PRBS_BIT_COUNT:   (0x00001904@0050)
PRBS_ERROR_COUNT: (0x00000bf3@0054)
PRBS_BIT_COUNT:   (0x000019b6@0050)
PRBS_ERROR_COUNT: (0x00000c43@0054)
PRBS_BIT_COUNT:   (0x00001a67@0050)
PRBS_ERROR_COUNT: (0x00000ca4@0054)
PRBS_BIT_COUNT:   (0x00001b19@0050)
PRBS_ERROR_COUNT: (0x00000cf7@0054)
PRBS_BIT_COUNT:   (0x00001bcb@0050)
PRBS_ERROR_COUNT: (0x00000d54@0054)
PRBS_BIT_COUNT:   (0x00001c7c@0050)
PRBS_ERROR_COUNT: (0x00000db3@0054)
PRBS_BIT_COUNT:   (0x00001d2e@0050)
PRBS_ERROR_COUNT: (0x00000e10@0054)
PRBS_BIT_COUNT:   (0x00001ddf@0050)
PRBS_ERROR_COUNT: (0x00000e66@0054)
PRBS_BIT_COUNT:   (0x00001e91@0050)
PRBS_ERROR_COUNT: (0x00000ec2@0054)
PRBS_BIT_COUNT:   (0x00001f43@0050)
PRBS_ERROR_COUNT: (0x00000f22@0054)
PRBS_BIT_COUNT:   (0x00001ff5@0050)
PRBS_ERROR_COUNT: (0x00000f6c@0054)
PRBS_BIT_COUNT:   (0x000020a7@0050)
PRBS_ERROR_COUNT: (0x00000fca@0054)
PRBS_BIT_COUNT:   (0x00002159@0050)
PRBS_ERROR_COUNT: (0x00001025@0054)
PRBS_BIT_COUNT:   (0x0000220a@0050)
PRBS_ERROR_COUNT: (0x00001081@0054)
PRBS_BIT_COUNT:   (0x000022bc@0050)
PRBS_ERROR_COUNT: (0x000010cf@0054)
PRBS_BIT_COUNT:   (0x0000236e@0050)
PRBS_ERROR_COUNT: (0x00001124@0054)
PRBS_BIT_COUNT:   (0x0000241f@0050)
PRBS_ERROR_COUNT: (0x00001188@0054)
PRBS_BIT_COUNT:   (0x000024d1@0050)
PRBS_ERROR_COUNT: (0x000011e3@0054)
PRBS_BIT_COUNT:   (0x00002583@0050)
PRBS_ERROR_COUNT: (0x0000123a@0054)
PRBS_BIT_COUNT:   (0x00002635@0050)
PRBS_ERROR_COUNT: (0x00001291@0054)
PRBS_BIT_COUNT:   (0x000026e8@0050)
PRBS_ERROR_COUNT: (0x000012ee@0054)
PRBS_BIT_COUNT:   (0x0000279a@0050)
PRBS_ERROR_COUNT: (0x00001346@0054)
PRBS_BIT_COUNT:   (0x0000284c@0050)
PRBS_ERROR_COUNT: (0x00001391@0054)
PRBS_BIT_COUNT:   (0x000028ff@0050)
PRBS_ERROR_COUNT: (0x000013e8@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
resync PRBS by setting and then clearing bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x00000009 to PRBS_CONTROL. PRBS active, no errors inserted, PRBS sync.
We read PRBS_CONTROL: (0x00000009@0040)
We read PRBS_CONTROL: (0x00000001@0040)
We read MSK_CONTROL: (0x00000003@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000094@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000146@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000001f8@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000002aa@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x0000035c@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x0000040f@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000004c1@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000573@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000626@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000006d8@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
resync PRBS (2nd time) by setting and then clearing bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x00000009 to PRBS_CONTROL. PRBS active, no errors inserted, PRBS sync.
We read PRBS_CONTROL: (0x00000009@0040)
We read PRBS_CONTROL: (0x00000001@0040)
We read MSK_CONTROL: (0x00000003@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000093@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000145@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000001f7@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000002a9@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x0000035e@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000410@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000004c2@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000573@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000625@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000006d7@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Do not resync at this time, which is bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x00000003 to PRBS_CONTROL. PRBS active, errors inserted.
We read PRBS_CONTROL: (0x00000003@0040)
We read MSK_CONTROL: (0x00000003@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x0000083b@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000008ec@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x0000099e@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000a50@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000b02@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000bb3@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000c65@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000d17@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000dc8@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000e7b@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Do not resync at this time, which is bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x00000001 to PRBS_CONTROL. PRBS active, errors not inserted.
We read PRBS_CONTROL: (0x00000001@0040)
We read MSK_CONTROL: (0x00000003@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000fe0@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x00001091@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x00001143@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x000011f5@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x000012a6@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x00001358@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x0000140a@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x000014bb@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x0000156d@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x0000161f@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Enable PTT, loopback, and assert RX invert. Write 0x00000007 to MSK_CONTROL.
We read MSK_CONTROL: (0x00000007@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x000016d2@0050)
PRBS_ERROR_COUNT: (0x00000001@0054)
PRBS_BIT_COUNT:   (0x00001784@0050)
PRBS_ERROR_COUNT: (0x000000b3@0054)
PRBS_BIT_COUNT:   (0x00001835@0050)
PRBS_ERROR_COUNT: (0x00000165@0054)
PRBS_BIT_COUNT:   (0x000018e7@0050)
PRBS_ERROR_COUNT: (0x00000217@0054)
PRBS_BIT_COUNT:   (0x00001999@0050)
PRBS_ERROR_COUNT: (0x000002c9@0054)
PRBS_BIT_COUNT:   (0x00001a4b@0050)
PRBS_ERROR_COUNT: (0x0000037b@0054)
PRBS_BIT_COUNT:   (0x00001afd@0050)
PRBS_ERROR_COUNT: (0x0000042d@0054)
PRBS_BIT_COUNT:   (0x00001baf@0050)
PRBS_ERROR_COUNT: (0x000004df@0054)
PRBS_BIT_COUNT:   (0x00001c61@0050)
PRBS_ERROR_COUNT: (0x00000590@0054)
PRBS_BIT_COUNT:   (0x00001d13@0050)
PRBS_ERROR_COUNT: (0x00000642@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
resync PRBS by setting and then clearing bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x00000009 to PRBS_CONTROL. PRBS active, no errors inserted, PRBS sync.
We read PRBS_CONTROL: (0x00000009@0040)
We read PRBS_CONTROL: (0x00000001@0040)
We read MSK_CONTROL: (0x00000007@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000093@0050)
PRBS_ERROR_COUNT: (0x00000075@0054)
PRBS_BIT_COUNT:   (0x00000145@0050)
PRBS_ERROR_COUNT: (0x000000e0@0054)
PRBS_BIT_COUNT:   (0x000001f7@0050)
PRBS_ERROR_COUNT: (0x00000133@0054)
PRBS_BIT_COUNT:   (0x000002a8@0050)
PRBS_ERROR_COUNT: (0x00000192@0054)
PRBS_BIT_COUNT:   (0x0000035a@0050)
PRBS_ERROR_COUNT: (0x000001e3@0054)
PRBS_BIT_COUNT:   (0x0000040c@0050)
PRBS_ERROR_COUNT: (0x0000023b@0054)
PRBS_BIT_COUNT:   (0x000004be@0050)
PRBS_ERROR_COUNT: (0x0000029e@0054)
PRBS_BIT_COUNT:   (0x00000570@0050)
PRBS_ERROR_COUNT: (0x000002eb@0054)
PRBS_BIT_COUNT:   (0x00000622@0050)
PRBS_ERROR_COUNT: (0x0000034d@0054)
PRBS_BIT_COUNT:   (0x000006d4@0050)
PRBS_ERROR_COUNT: (0x000003a8@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
resync PRBS by setting and then clearing bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x0000000b to PRBS_CONTROL. PRBS active, errors inserted, PRBS sync.
We read PRBS_CONTROL: (0x0000000b@0040)
We read PRBS_CONTROL: (0x00000003@0040)
We read MSK_CONTROL: (0x00000007@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000094@0050)
PRBS_ERROR_COUNT: (0x00000076@0054)
PRBS_BIT_COUNT:   (0x00000146@0050)
PRBS_ERROR_COUNT: (0x000000e1@0054)
PRBS_BIT_COUNT:   (0x000001f8@0050)
PRBS_ERROR_COUNT: (0x00000134@0054)
PRBS_BIT_COUNT:   (0x000002ad@0050)
PRBS_ERROR_COUNT: (0x00000193@0054)
PRBS_BIT_COUNT:   (0x0000035f@0050)
PRBS_ERROR_COUNT: (0x000001e6@0054)
PRBS_BIT_COUNT:   (0x00000411@0050)
PRBS_ERROR_COUNT: (0x0000023e@0054)
PRBS_BIT_COUNT:   (0x000004c3@0050)
PRBS_ERROR_COUNT: (0x0000029f@0054)
PRBS_BIT_COUNT:   (0x00000576@0050)
PRBS_ERROR_COUNT: (0x000002ec@0054)
PRBS_BIT_COUNT:   (0x00000628@0050)
PRBS_ERROR_COUNT: (0x0000034f@0054)
PRBS_BIT_COUNT:   (0x000006db@0050)
PRBS_ERROR_COUNT: (0x000003ac@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
resync PRBS by setting and then clearing bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x00000009 to PRBS_CONTROL. PRBS active, no errors inserted, PRBS sync.
We read PRBS_CONTROL: (0x00000009@0040)
We read PRBS_CONTROL: (0x00000001@0040)
We read MSK_CONTROL: (0x00000007@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000094@0050)
PRBS_ERROR_COUNT: (0x00000076@0054)
PRBS_BIT_COUNT:   (0x00000145@0050)
PRBS_ERROR_COUNT: (0x000000e1@0054)
PRBS_BIT_COUNT:   (0x000001f8@0050)
PRBS_ERROR_COUNT: (0x00000134@0054)
PRBS_BIT_COUNT:   (0x000002aa@0050)
PRBS_ERROR_COUNT: (0x00000193@0054)
PRBS_BIT_COUNT:   (0x0000035c@0050)
PRBS_ERROR_COUNT: (0x000001e4@0054)
PRBS_BIT_COUNT:   (0x0000040e@0050)
PRBS_ERROR_COUNT: (0x0000023b@0054)
PRBS_BIT_COUNT:   (0x000004c1@0050)
PRBS_ERROR_COUNT: (0x0000029f@0054)
PRBS_BIT_COUNT:   (0x00000573@0050)
PRBS_ERROR_COUNT: (0x000002ec@0054)
PRBS_BIT_COUNT:   (0x00000625@0050)
PRBS_ERROR_COUNT: (0x0000034d@0054)
PRBS_BIT_COUNT:   (0x000006d7@0050)
PRBS_ERROR_COUNT: (0x000003a9@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Enable PTT, loopback, and deassert RX invert. Write 0x00000003 to MSK_CONTROL.
We read MSK_CONTROL: (0x00000003@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x0000078b@0050)
PRBS_ERROR_COUNT: (0x00000409@0054)
PRBS_BIT_COUNT:   (0x0000083c@0050)
PRBS_ERROR_COUNT: (0x00000460@0054)
PRBS_BIT_COUNT:   (0x000008ee@0050)
PRBS_ERROR_COUNT: (0x000004a2@0054)
PRBS_BIT_COUNT:   (0x0000099f@0050)
PRBS_ERROR_COUNT: (0x000004e2@0054)
PRBS_BIT_COUNT:   (0x00000a51@0050)
PRBS_ERROR_COUNT: (0x0000053c@0054)
PRBS_BIT_COUNT:   (0x00000b03@0050)
PRBS_ERROR_COUNT: (0x00000596@0054)
PRBS_BIT_COUNT:   (0x00000bb4@0050)
PRBS_ERROR_COUNT: (0x000005e6@0054)
PRBS_BIT_COUNT:   (0x00000c66@0050)
PRBS_ERROR_COUNT: (0x00000638@0054)
PRBS_BIT_COUNT:   (0x00000d17@0050)
PRBS_ERROR_COUNT: (0x00000693@0054)
PRBS_BIT_COUNT:   (0x00000dc9@0050)
PRBS_ERROR_COUNT: (0x000006ea@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
resync PRBS by setting and then clearing bit 3 of PRBS_CONTROL. Bit 2 clears counters.
Bit 1 is insert error. Bit 0 is PRBS select.
Write 0x00000009 to PRBS_CONTROL. PRBS active, errors not inserted, PRBS sync.
We read PRBS_CONTROL: (0x00000009@0040)
We read PRBS_CONTROL: (0x00000001@0040)
We read MSK_CONTROL: (0x00000003@000c)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Read PRBS_BIT_COUNT and PRBS_ERROR_COUNT to see what's going on.
PRBS_BIT_COUNT:   (0x00000093@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000144@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000001f6@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000002a7@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000359@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x0000040b@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000004bc@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x0000056e@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x00000620@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
PRBS_BIT_COUNT:   (0x000006d1@0050)
PRBS_ERROR_COUNT: (0x00000000@0054)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Write 0x00000000 to PRBS_CONTROL. Normal operations, errors not inserted, PRBS deactivated.
We read PRBS_CONTROL: (0x00000000@0040)
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Writing MSK_CONTROL register.
Writing PTT, bits 0 set. Loopback bit 1 cleared.
We read MSK_CONTROL: (0x00000001@000c)
Normal operations, loopback is no longer enabled.
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
* Destroying buffers
* Disabling streaming channels
* Destroying context
